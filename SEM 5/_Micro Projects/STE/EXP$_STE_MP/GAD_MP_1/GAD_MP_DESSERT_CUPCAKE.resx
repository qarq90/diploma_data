<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/4gxY
        SUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3NwTVNGVAAA
        AABJRUMgc1JHQgAAAAAAAAAAAAAAAAAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0AAAB8AAA
        ABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5kAAACVAAA
        AHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFzAAAEDAAA
        ACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0AAAAAENv
        cHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAASc1JHQiBJ
        RUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVogAAAAAAAA
        AAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVogAAAAAAAA
        JKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAFklFQyBo
        dHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IA
        AAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNSR0IAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGlu
        IElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2
        MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8UAAPtzAAE
        EwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        Ao8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3ADsAQABF
        AEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDLANAA1QDb
        AOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGDAYsBkgGa
        AaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKEAo4CmAKi
        AqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPTA+AD7AP5
        BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3BYYFlgWm
        BbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0B4YHmQes
        B78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnPCeUJ+woR
        CicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyODKcMwAzZ
        DPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+zD88P7BAJ
        ECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxNDE2MTgxOk
        E8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdBF2UXiReu
        F9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2MbihuyG9ocAhwq
        HFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCYIMQg8CEc
        IUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3JicmVyaH
        Jrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvRLAUsOSxu
        LKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIqMmMymzLU
        Mw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkFOUI5fzm8
        Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0BkQKZA50Ep
        QWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhLSJFI10kd
        SWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7UQZRUFGb
        UeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4WgdaVlqm
        WvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GNDY5dj62RA
        ZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1gbbluEm5r
        bsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gReG54zHkq
        eYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INXg7qEHYSA
        hOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82j56QBpBu
        kNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuvnByciZz3
        nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjEqTepqaoc
        qo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5tvC3aLfg
        uFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTOxUvFyMZG
        xsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG1EnUy9VO
        1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj4+vkc+T8
        5YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn9DT0wvVQ
        9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAIBAQIBAQICAgICAgICAwUD
        AwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYD
        AwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAAR
        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
        FADdlBSiigBrJRRRQB//2Q==
</value>
  </data>
</root>